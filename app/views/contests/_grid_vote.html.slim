.vote
  .entry
    - if losers_finalist
      - if vote.right
        p class="#{vote.finished? ? (vote.winner == vote.right ? 'winner' : 'loser') : ''}"
          - if vote.finished?
            span.votes-num
              span.sep.zero ="("
              span.val = vote.right_votes
              span.sep.zero =")"
          a.bubbled href="#{url_for vote.right}" data-remote="true"
            = UserPresenter.localized_name vote.right, current_user
      - else
        p.unknown ???
    - else
      - if vote.left
        p class="#{vote.finished? ? (vote.winner == vote.left ? 'winner' : 'loser') : ''}"
          - if vote.finished?
            span.votes-num
              span.sep.zero ="("
              span.val = vote.left_votes
              span.sep.zero =")"

          a.bubbled href="#{url_for vote.left}" data-remote="true"
            = UserPresenter.localized_name vote.left, current_user
      - else
        p.unknown ???
  .entry.grid
    - if vote.right_type || !vote.left_type
      - if vote.right
        p class="#{vote.finished? ? (vote.winner == vote.right ? 'winner' : 'loser') : ''}"
          - if vote.finished?
            span.votes-num
              span.sep.zero ="("
              span.val = vote.right_votes
              span.sep.zero =")"

          a.bubbled href="#{url_for vote.right}" data-remote="true"
            = UserPresenter.localized_name vote.right, current_user
      - else
        p.unknown ???
    - else
      p нет участника
    p.date
      a href="#{round_vote_contest_path contest.to_param, round.number, vote.id}"
        = Russian::strftime vote.started_on, '%e %b'
        - if vote.started_on.strftime('%d.%m') != vote.finished_on.strftime('%d.%m')
          | &nbsp;&ndash;&nbsp;
          = Russian::strftime vote.finished_on, '%e %b'
